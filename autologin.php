<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * Auto-login end-point, a user can be fully authenticated in the site providing a valid token.
 *
 * @package    local_appcrue
 * @copyright  2021 Juan Pblo de Castro
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */

require_once(__DIR__ . '/../../config.php');
require_once('locallib.php');

$context = context_system::instance();
$PAGE->set_context($context);

if (!get_config('local_appcrue', 'enable_autologin')) {
    throw new moodle_exception('servicedonotexist', 'error');
}
$token = optional_param('token', null, PARAM_RAW);    // The key generated by the IDP for AppCrue.
$fallback = optional_param('fallback', 'error', PARAM_ALPHA); // If token fails: error, logout, ignore.


// Check token and get user record.
// Check token.
list($user, $diag) = appcrue_get_user($token);
if ($user == null && $fallback == 'error') {
    throw new moodle_exception('invalidaccessparameter', 'error', '', '', $token);
}

if ($user == null && $fallback == 'logout') {
    require_logout();
} else if ($user == null && $fallback == 'continue') {
    // Do nothing with session.
} else if ($user != null) {
    // Token validated, now require an active user: not guest, not suspended.
    core_user::require_active_user($user, true, true);
    complete_user_login($user);
    \core\session\manager::apply_concurrent_login_limit($user->id, session_id());
}

$urltogo = appcrue_get_target_url();
redirect($urltogo);
